/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PathologistRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.LabOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientApprovalWorkRequest;
import Business.WorkQueue.PatientLabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.VolunteerRole.UpdatePatientDetailsJPanel;

/**
 *
 * @author Rohit
 */
public class PathologistWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PathologistWorkAreaJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    LabOrganization labOrganization;
    EcoSystem system;
    UserAccount account;

    public PathologistWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, LabOrganization labOrganization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.labOrganization = (LabOrganization) labOrganization;
        this.system = system;
        this.account = account;
        lblPathologistName.setText(account.getEmployee().getName());
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblPathologistDetails.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : labOrganization.getWorkQueue().getWorkRequestList()) {
            if(request instanceof PatientLabTestWorkRequest){
            PatientLabTestWorkRequest patientLabTestWorkRequest = (PatientLabTestWorkRequest) request;
            Object[] row = new Object[7];
            row[0] = patientLabTestWorkRequest;
            row[1] = patientLabTestWorkRequest.getRespiratoryRate();
            row[2] = patientLabTestWorkRequest.getHeartRate();
            row[3] = patientLabTestWorkRequest.getSystolicBloodPressure();
            row[4] = patientLabTestWorkRequest.getBodyTemperature();
            row[5] = patientLabTestWorkRequest.getStatus();
            row[6] = patientLabTestWorkRequest.getDate();
            dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        lblPathologistName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPathologistDetails = new javax.swing.JTable();
        lblLabRequests = new javax.swing.JLabel();
        btnViewDetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(251, 251, 251));

        jLabel2.setBackground(new java.awt.Color(251, 251, 251));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Welcome");
        jLabel2.setEnabled(false);

        lblPathologistName.setBackground(new java.awt.Color(251, 251, 251));
        lblPathologistName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblPathologistName.setForeground(new java.awt.Color(51, 51, 51));
        lblPathologistName.setText("<pathologistName>");
        lblPathologistName.setEnabled(false);

        tblPathologistDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Respiratory Rate", "Heart Rate", "Blood Pressure", "Body Temperature", "Status", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPathologistDetails);
        if (tblPathologistDetails.getColumnModel().getColumnCount() > 0) {
            tblPathologistDetails.getColumnModel().getColumn(1).setResizable(false);
            tblPathologistDetails.getColumnModel().getColumn(2).setResizable(false);
        }

        lblLabRequests.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblLabRequests.setText("Lab Test Requests");

        btnViewDetails.setBackground(new java.awt.Color(251, 251, 251));
        btnViewDetails.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnViewDetails.setText("View Patient Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblPathologistName))
                    .addComponent(btnViewDetails)
                    .addComponent(lblLabRequests))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblPathologistName))
                .addGap(42, 42, 42)
                .addComponent(lblLabRequests)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPathologistDetails.getSelectedRow();
        
        if (selectedRow >= 0) {
            PatientLabTestWorkRequest patientReq = (PatientLabTestWorkRequest) tblPathologistDetails.getValueAt(selectedRow, 0);
            ViewPatientMedicalRecordJPanel viewPatientMedicalRecordJPanel = new ViewPatientMedicalRecordJPanel(userProcessContainer, account, enterprise.getOrganizationDirectory(), labOrganization, enterprise, system, patientReq);
            userProcessContainer.add("ViewPatientMedicalRecordJPanel", viewPatientMedicalRecordJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnViewDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLabRequests;
    private javax.swing.JLabel lblPathologistName;
    private javax.swing.JTable tblPathologistDetails;
    // End of variables declaration//GEN-END:variables
}
