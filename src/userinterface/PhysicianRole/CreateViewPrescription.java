/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PhysicianRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.GenerateLogs;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.PharmacyOrganization;
import Business.Organization.WelfareOrganization;
import Business.UserAccount.UserAccount;
import Business.Validate.Validator;
import Business.WorkQueue.PatientApprovalWorkRequest;
import Business.WorkQueue.PatientPrescriptionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mayur
 */
public class CreateViewPrescription extends javax.swing.JPanel {

    /**
     * Creates new form CreateViewPrescription
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private OrganizationDirectory organizationDirectory;
    private WelfareOrganization welfareOrganization;
    private Enterprise enterprise;
    private EcoSystem system;
    private PatientApprovalWorkRequest patient;
    private Validator validate;
    private PatientPrescriptionWorkRequest patientPrescriptionWorkRequest;
    private GenerateLogs logs;

    CreateViewPrescription(JPanel userProcessContainer, UserAccount account, OrganizationDirectory organizationDirectory, WelfareOrganization welfareOrganization, Enterprise enterprise, EcoSystem system, PatientApprovalWorkRequest patient, GenerateLogs logs) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organizationDirectory = organizationDirectory;
        this.welfareOrganization = welfareOrganization;
        this.enterprise = enterprise;
        this.system = system;
        this.patient = patient;
        this.logs = logs;
        this.validate = new Validator();
        this.patientPrescriptionWorkRequest = new PatientPrescriptionWorkRequest();
        btnUpdate.setEnabled(false);
        btnSendRequest.setEnabled(false);
        populateFields();
    }

    public void populateFields() {
        txtName.setText(patient.getPatientName());
        txtAge.setText(String.valueOf(patient.getAge()));
        txtDate.setText(validate.dateFormat());
        txtAddress.setText(patient.getAddress());
        txtSignature.setText(account.getEmployee().getName());
        DefaultTableModel dtm = (DefaultTableModel) tblMedicines.getModel();
        dtm.setRowCount(0);
        int count = 0;
        for (WorkRequest request : welfareOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof PatientPrescriptionWorkRequest) {
                PatientPrescriptionWorkRequest patientPrescriptionWorkRequest = (PatientPrescriptionWorkRequest) request;
                if (patientPrescriptionWorkRequest.getPatientId() == patient.getPatientID()) {
                    for (Entry<String, String> medicineList : patientPrescriptionWorkRequest.getMedicineList().entrySet()) {
                        Object[] row = new Object[2];
                        row[0] = medicineList.getKey();
                        row[1] = medicineList.getValue();
                        dtm.addRow(row);
                        count++;
                    }
                    txtNumberOfRows.setText(String.valueOf(count));
                    txtNumberOfRows.setEnabled(true);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        heading = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedicines = new javax.swing.JTable();
        lblNumberOfMedicines = new javax.swing.JLabel();
        txtNumberOfRows = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSendRequest = new javax.swing.JButton();
        lblNumberOfMedicines1 = new javax.swing.JLabel();
        txtSignature = new javax.swing.JTextField();
        btnCreatePrescription = new javax.swing.JButton();

        setBackground(new java.awt.Color(251, 251, 251));

        btnBack.setBackground(new java.awt.Color(251, 251, 251));
        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        heading.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("Prescription");

        jPanel1.setBackground(new java.awt.Color(63, 80, 181));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lblName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblName.setText("NAME:");

        txtName.setBackground(new java.awt.Color(0, 0, 0));
        txtName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtName.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtName.setEnabled(false);
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtAge.setBackground(new java.awt.Color(0, 0, 0));
        txtAge.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtAge.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAge.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAge.setEnabled(false);
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblAge.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblAge.setForeground(new java.awt.Color(255, 255, 255));
        lblAge.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAge.setText("AGE:");

        lblDate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDate.setText("DATE:");

        txtDate.setBackground(new java.awt.Color(0, 0, 0));
        txtDate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDate.setEnabled(false);
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        lblAddress.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAddress.setText("ADDRESS:");

        txtAddress.setBackground(new java.awt.Color(0, 0, 0));
        txtAddress.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAddress.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAddress.setEnabled(false);
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                    .addComponent(txtAddress))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        tblMedicines.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        tblMedicines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Dosage"
            }
        ));
        tblMedicines.setRowHeight(22);
        tblMedicines.setRowMargin(3);
        tblMedicines.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblMedicines);
        if (tblMedicines.getColumnModel().getColumnCount() > 0) {
            tblMedicines.getColumnModel().getColumn(0).setResizable(false);
            tblMedicines.getColumnModel().getColumn(1).setResizable(false);
        }

        lblNumberOfMedicines.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblNumberOfMedicines.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNumberOfMedicines.setText("Number of Medicines: ");

        txtNumberOfRows.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        txtNumberOfRows.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNumberOfRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberOfRowsActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(251, 251, 251));
        btnSave.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(251, 251, 251));
        btnUpdate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSendRequest.setBackground(new java.awt.Color(251, 251, 251));
        btnSendRequest.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnSendRequest.setText("Send Request");
        btnSendRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendRequestActionPerformed(evt);
            }
        });

        lblNumberOfMedicines1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblNumberOfMedicines1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNumberOfMedicines1.setText("Signature");

        txtSignature.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        txtSignature.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSignature.setEnabled(false);
        txtSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSignatureActionPerformed(evt);
            }
        });

        btnCreatePrescription.setBackground(new java.awt.Color(251, 251, 251));
        btnCreatePrescription.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnCreatePrescription.setText("Create Prescription");
        btnCreatePrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePrescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lblNumberOfMedicines, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtNumberOfRows))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNumberOfMedicines1)
                                .addComponent(txtSignature, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnSendRequest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCreatePrescription, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(119, 119, 119))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumberOfMedicines)
                    .addComponent(txtNumberOfRows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumberOfMedicines1)
                    .addComponent(btnCreatePrescription))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSendRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(txtSignature))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(131, 131, 131)
                        .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtNumberOfRowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberOfRowsActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNumberOfRowsActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int numberOfRows = Integer.parseInt(txtNumberOfRows.getText());
        DefaultTableModel dtm = (DefaultTableModel) tblMedicines.getModel();
        dtm.setRowCount(numberOfRows);
        txtNumberOfRows.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnSave.setEnabled(false);
        tblMedicines.setEnabled(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (patient.getStatus().equals("Completed")) {
            JOptionPane.showMessageDialog(null, "Cannot update prescription of completed patient request");
        } else {
            txtNumberOfRows.setEnabled(true);
            btnCreatePrescription.setEnabled(true);
            btnUpdate.setEnabled(false);
            btnSendRequest.setEnabled(false);
            btnSave.setEnabled(true);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSendRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendRequestActionPerformed
        // TODO add your handling code here:
        try {
            if (patient.getStatus().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Prescription already sent to pharmacy for " + patient.getPatientName());
            } else {
                DefaultTableModel dtm = (DefaultTableModel) tblMedicines.getModel();
                HashMap<String, String> medicineList = new HashMap<>();
                for (int i = 0; i < dtm.getRowCount(); i++) {
                    medicineList.put(dtm.getValueAt(i, 0).toString(), dtm.getValueAt(i, 1).toString());
                }
                patientPrescriptionWorkRequest.setPatientId(patient.getPatientID());
                patientPrescriptionWorkRequest.setPatientName(txtName.getText());
                patientPrescriptionWorkRequest.setAge(Integer.parseInt(txtAge.getText()));
                patientPrescriptionWorkRequest.setDatePrescribed(txtDate.getText());
                patientPrescriptionWorkRequest.setAddress(txtAddress.getText());
                patientPrescriptionWorkRequest.setDocName(txtSignature.getText());
                patientPrescriptionWorkRequest.setMedicineList(medicineList);
                patientPrescriptionWorkRequest.setOrganization(welfareOrganization.toString());

                Organization pharOrg = null;
                Organization welOrg = null;
                for (Network n : system.getNetworkList()) {
                    for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                        if (e.getEnterpriseType().toString().equals("Hospital")) {
                            for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                                if (organization instanceof PharmacyOrganization) {
                                    pharOrg = organization;
                                    break;
                                }
                            }
                        }
                    }
                }
                patientPrescriptionWorkRequest.setStatus("Pending");
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof WelfareOrganization) {
                        welOrg = organization;
                        break;
                    }
                }
                if (pharOrg != null && welOrg != null) {
                    pharOrg.getWorkQueue().getWorkRequestList().add(patientPrescriptionWorkRequest);
                    welOrg.getWorkQueue().getWorkRequestList().add(patientPrescriptionWorkRequest);
                    logs.generateLogs(CreateViewPrescription.class.getName(), "Patient request for prescription added to " + pharOrg.getName()+" work queue. "+ " Request Status: "+ patientPrescriptionWorkRequest.getStatus());
                }
                JOptionPane.showMessageDialog(null, "Prescription Sent to Pharmacy");
                patient.setStatus("Completed");
                logs.generateLogs(CreateViewMedicalRecordJPanel.class.getName(), "Patient Approval Work Request Status: "+ patient.getStatus());
                
                
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Prescription cannot be empty");
        } catch (IOException ex) {
            Logger.getLogger(CreateViewPrescription.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSendRequestActionPerformed

    private void txtSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSignatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSignatureActionPerformed

    private void btnCreatePrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePrescriptionActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblMedicines.getModel();
        btnSendRequest.setEnabled(true);
        btnCreatePrescription.setEnabled(false);
        tblMedicines.setEnabled(false);
    }//GEN-LAST:event_btnCreatePrescriptionActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CreateViewMedicalRecordJPanel panel = (CreateViewMedicalRecordJPanel) component;
        panel.checkRecordExistsOrNot();;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreatePrescription;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSendRequest;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel heading;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumberOfMedicines;
    private javax.swing.JLabel lblNumberOfMedicines1;
    private javax.swing.JTable tblMedicines;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumberOfRows;
    private javax.swing.JTextField txtSignature;
    // End of variables declaration//GEN-END:variables
}
