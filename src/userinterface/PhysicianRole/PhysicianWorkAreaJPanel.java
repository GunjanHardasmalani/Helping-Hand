/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PhysicianRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.GenerateLogs;
import Business.Organization.WelfareOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientApprovalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rohit
 */
public class PhysicianWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    WelfareOrganization welfareOrganization;
    EcoSystem system;
    UserAccount account;
    private GenerateLogs logs;

    /**
     * Creates new form PhysicianWorkAreaJPanel
     */
    public PhysicianWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, WelfareOrganization welfareOrganization, Enterprise enterprise, EcoSystem system, GenerateLogs logs) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.welfareOrganization = (WelfareOrganization) welfareOrganization;
        this.system = system;
        this.account = account;
        this.logs = logs;
        lblPhysicianName.setText(account.getEmployee().getName());
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblPatientDetails.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : welfareOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof PatientApprovalWorkRequest) {
                PatientApprovalWorkRequest patientApprovalWorkRequest = (PatientApprovalWorkRequest) request;

                if (patientApprovalWorkRequest.getAssignedPhysician().equalsIgnoreCase(account.getEmployee().getName())) {

                    Object[] row = new Object[9];
                    row[0] = patientApprovalWorkRequest.getPatientID();
                    row[1] = patientApprovalWorkRequest;
                    row[2] = patientApprovalWorkRequest.getAge();
                    row[3] = patientApprovalWorkRequest.getSSN();
                    row[4] = patientApprovalWorkRequest.getGender();
                    row[5] = patientApprovalWorkRequest.getZipcode();
                    row[6] = patientApprovalWorkRequest.getPhone();
                    row[7] = patientApprovalWorkRequest.getStatus();
                    row[8] = patientApprovalWorkRequest.getAssignedPhysician();
                    dtm.addRow(row);
                }
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPhysicianName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientDetails = new javax.swing.JTable();
        btnMedicalRecord = new javax.swing.JButton();

        setBackground(new java.awt.Color(251, 251, 251));

        lblPhysicianName.setBackground(new java.awt.Color(251, 251, 251));
        lblPhysicianName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblPhysicianName.setForeground(new java.awt.Color(51, 51, 51));
        lblPhysicianName.setText("<physicianName>");
        lblPhysicianName.setEnabled(false);

        jLabel2.setBackground(new java.awt.Color(251, 251, 251));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Welcome");
        jLabel2.setEnabled(false);

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setFont(new java.awt.Font("American Typewriter", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("!");
        jLabel3.setEnabled(false);

        tblPatientDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Patient Name", "Age", "SSN", "Gender", "Zipcode", "Phone Number", "Status", "Physician"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatientDetails);

        btnMedicalRecord.setBackground(new java.awt.Color(251, 251, 251));
        btnMedicalRecord.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnMedicalRecord.setText("Create/View Medical Record");
        btnMedicalRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicalRecordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(352, Short.MAX_VALUE)
                .addComponent(btnMedicalRecord)
                .addContainerGap(353, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblPhysicianName))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(92, 92, 92)
                    .addComponent(jScrollPane1)
                    .addGap(92, 92, 92)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblPhysicianName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 336, Short.MAX_VALUE)
                .addComponent(btnMedicalRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(201, 201, 201)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(201, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMedicalRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicalRecordActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblPatientDetails.getSelectedRow();
        if (selectedRow >= 0) {
            for (WorkRequest request : welfareOrganization.getWorkQueue().getWorkRequestList()) {
                if (request instanceof PatientApprovalWorkRequest) {
                    PatientApprovalWorkRequest patientApprovalWorkRequest = (PatientApprovalWorkRequest) request;
                    PatientApprovalWorkRequest patient = (PatientApprovalWorkRequest) tblPatientDetails.getValueAt(selectedRow, 1);
                    if(patient.getPatientID() == patientApprovalWorkRequest.getPatientID()){
                    CreateViewMedicalRecordJPanel createViewMedicalRecordJPanel = new CreateViewMedicalRecordJPanel(userProcessContainer, account, enterprise.getOrganizationDirectory(), welfareOrganization, enterprise, system, patient, logs);
                    userProcessContainer.add("createViewMedicalRecordJPanel", createViewMedicalRecordJPanel);
                    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                    layout.next(userProcessContainer);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnMedicalRecordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMedicalRecord;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPhysicianName;
    private javax.swing.JTable tblPatientDetails;
    // End of variables declaration//GEN-END:variables
}
